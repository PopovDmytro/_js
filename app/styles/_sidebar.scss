//media points list
$media: (
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px
);
//width height
$sidebarWidth: 80vw;
$sidebarHeight: 100vh;
//side bar width list
$sidebarMaxWidthList: (
    sm: 80%,
    md: 50%,
    lg: 300px,
    xl: 250px
);
//transition time
$transitionTime: 0.3s;
//side bar positions
$positionList: (top, right, bottom, left);
//mixins
//iteration through $positionList
@mixin eachPosition ($isSidebar: true, $positionList: $positionList, $maxWidth: $sidebarWidth, $height: $sidebarHeight) {
    @each $position in $positionList {
        @if($isSidebar) {
            &.#{$position} {
                @if $position == 'top' or $position == 'bottom' {
                    #{$position}: -#{$height};
                    left: 0;
                } @else {
                    #{$position}: $maxWidth;
                    top: 0;
                }
            }

            &.open.#{$position} {
                #{$position}: 0;
            }
        } @else {
            &.#{$position} {
                #{$position}: 0px;
            }

            &.#{$position}[class*='open'].push-content {
                @if $position == 'top' or $position == 'bottom' {
                    #{$position}: auto;
                }
                @if $position == 'left' {
                    #{$position}: $maxWidth;
                }
                @if $position == 'right' {
                    left: -$maxWidth;
                }
            }
        }
    }
}
//
body {
    min-width: 90%;
    overflow-x: hidden;
    position: relative;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    transition: top $transitionTime, right $transitionTime, bottom $transitionTime, left $transitionTime;

    //transparent overlay
    &:after {
        background-color: rgba(#000, 0.5);
        content: '';
        height: 100%;
        left: 0;
        opacity: 0;
        position: fixed;
        top: 0;
        transition: opacity $transitionTime;
        visibility: hidden;
        width: 100%;
        z-index: 9;
    }

    &[class*="_open"] {
        position: fixed;

        &:after {
            opacity: 1;
            visibility: visible;
        }
    }
    //positions iteration
    @include eachPosition($isSidebar: false);
}
//sidebar
.sidebar {
    background-color: #555555;
    color: #ffffff;
    height: $sidebarHeight;
    max-width: $sidebarWidth;
    overflow: auto;
    position: fixed;
    transition: top $transitionTime, right $transitionTime, bottom $transitionTime, left $transitionTime;
    width: 100%;
    z-index: 10;

    ul {
        list-style-type: none;
        padding: 0 0 0 20px;
        margin: 0;
    }

    a {
        color: #ffffff;
    }

    .has-child-list {
        position: relative;
    }
    //positions iteration
    @include eachPosition($maxWidth: -#{$sidebarWidth});
}
//sidebar toggle button
.sidebar-toggle {
    background-color: #777777;
    color: #ffffff;
    cursor: pointer;
    display: inline-block;
    padding: 4px 8px;
    width: auto;
}
//child list and child toggle button
.has-child-list {

    ul {
        max-height: 0;
        overflow: hidden;
        transition: max-height $transitionTime;
    }

    &.open {

        & > .list-toggle:after {
            content: '-';
        }

        & > ul {
            max-height: 1000px;
        }
    }

    .list-toggle {
        background: rgba(#fff, 0.5);
        height: 20px;
        line-height: 20px;
        position: absolute;
        right: 0;
        text-align: center;
        width: 20px;
        cursor: pointer;

        &:after {
            content: '+';
        }
    }
}
//sm md lg xl screens
@each $point in map_values($media) {
    $i: index(map_values($media), $point);
    $nthWidth: nth(map_values($sidebarMaxWidthList), $i);
    //media
    @media only screen and (min-width: $point) {

        body {
            //positions iteration
            @include eachPosition($isSidebar: false, $maxWidth: $nthWidth);
        }

        .sidebar {
            max-width: $nthWidth;
            //positions iteration
            @include eachPosition($maxWidth: -#{$nthWidth});
        }
    }
}
